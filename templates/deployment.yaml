---

{% if cluster == 'kubernetes' %}
apiVersion: {{ deployment_api_version }}
kind: Deployment
{% else %}
apiVersion: {{ deploymentconfig_api_version }}
kind: DeploymentConfig
{% endif %}
metadata:
  name: {{ app_name }}
  namespace: {{ namespace }}
  labels:
    app: {{ app_name }}
    service: {{ app_name }}
spec:
  replicas: 1
{% if cluster == 'kubernetes' %}
  selector:
    matchLabels:
      app: {{ app_name }}
      service: {{ app_name }}
  strategy:
    type: Recreate
{% else %}
  selector:
    app: {{ app_name }}
    service: {{ app_name }}
  strategy:
    type: Rolling
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
  test: false
  triggers:
    - type: ConfigChange
{% endif %}
  template:
    metadata:
      labels:
        app: {{ app_name }}
        service: {{ app_name }}
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - image: {{ app_image }}
          name: mariadb
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: '{{ mariadb_root_password }}'
            - name: MYSQL_USER
              value: '{{ mariadb_user }}'
            - name: MYSQL_PASSWORD
              value: '{{ mariadb_password }}'
            - name: MYSQL_DATABASE
              value: '{{ mariadb_database }}'
          terminationMessagePath: /dev/termination-log
          workingDir: /
          ports:
            - containerPort: {{ mariadb_port }}
              protocol: TCP
{% if _apb_plan_id == 'prod' %}
          volumeMounts:
            - name: mariadb
              mountPath: /var/lib/mysql
      volumes:
        - name: mariadb
          persistentVolumeClaim:
            claimName: {{ app_name }}
{% endif %}
