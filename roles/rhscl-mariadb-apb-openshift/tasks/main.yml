---
- block:
  - name: Find pod we need to update
    shell: oc get pods -n {{ namespace }} -l app=rhscl-mariadb-apb -o custom-columns=name:.metadata.name --no-headers
    register: oldpod

  - name: Find dc we will clean up
    shell: oc get dc -n {{ namespace }} -l app=rhscl-mariadb-apb -o custom-columns=name:.metadata.name --no-headers
    register: olddc

  - name: Backup source database
    shell:  oc exec -it -n {{ namespace }} {{ oldpod.stdout }} -- /bin/bash -c "mysqldump -u root --all-databases > /tmp/db.dump"

  - name: Copy over db backup
    shell: oc cp -n {{ namespace }} {{ oldpod.stdout }}:/tmp/db.dump /tmp/db.dump
  when:
    - update is defined
    - _apb_plan_id != "ha"

- name: set {{ service_name }} service state to {{ state }}
  k8s_v1_service:
    name: "{{ service_name }}"
    namespace: '{{ namespace }}'
    state: "{{ state }}"
    labels:
      app: rhscl-mariadb-apb
      service: "{{ service_name }}"
    selector:
      app: rhscl-mariadb-apb
      service: "{{ service_name }}-{{ mariadb_version }}-{{ _apb_plan_id }}"
    ports:
    - name: port-3306
      port: 3306
      protocol: TCP
      target_port: 3306
  register: mariadb_service
  when:
    - _apb_plan_id != "ha"
    - action != "test"

- include_tasks: dev.yml
  when:
    - _apb_plan_id == "dev"
    - action != "test"

- include_tasks: prod.yml
  when:
    - _apb_plan_id == "prod"
    - action != "test"

- include_tasks: ha.yml
  when:
    - _apb_plan_id == "ha"
    - action != "test"

- block:
  - name: Wait for mariadb to come up
    wait_for:
      port: 3306
      host: "{{ mariadb_service.service.spec.cluster_ip }}"
      timeout: 300

  - name: Find pod we need to restore
    shell: oc get pods -n {{ namespace }} --show-all=false -l service={{ service_name }}-{{ mariadb_version }}-{{ _apb_plan_id }} -o custom-columns=name:.metadata.name --no-headers
    register: newpod

  - name: Copy over db backup
    shell: oc cp -n {{ namespace }} /tmp/db.dump {{ newpod.stdout }}:tmp/db.dump

  - name: Restore database
    shell:  oc exec -it -n {{ namespace }} {{ newpod.stdout }} -- /bin/bash -c "mysql -u root  < /tmp/db.dump"

  - name: Remove old dc
    openshift_v1_deployment_config:
      name: "{{ olddc.stdout }}"
      namespace: '{{ namespace }}'
      state: absent

  - name: ensure production volume is absent
    k8s_v1_persistent_volume_claim:
      name: "{{ service_name }}-{{ item }}-prod"
      namespace: '{{ namespace }}'
      access_modes:
        - ReadWriteOnce
      resources_requests:
        storage: '{{ volume_size }}'
      state: "absent"
    with_items:
      - "10.0"
      - "10.1"
      - "10.2"
    when: _apb_plan_id == "dev" or item != mariadb_version
  when:
    - update is defined
    - _apb_plan_id != "ha"

- name: "[MARIADB_APB][MAIN] Test mariadb deployment"
  include_tasks: test.yml
  when: action == "test"

- name: encode bind credentials
  asb_encode_binding:
    fields:
      DB_TYPE: "mysql"
      DB_HOST: "{{ service_name }}"
      DB_PORT: "3306"
      DB_USER: "{{ mariadb_user }}"
      DB_PASSWORD: "{{ mariadb_password }}"
      DB_NAME: "{{ mariadb_database }}"
  when:
    - state == "present"
    - action != "test"
